input {
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.11.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_connection_string => "jdbc:postgresql://vehicleaccidents.c1rezrsxnuwk.us-east-2.rds.amazonaws.com/vehicleaccidents"
        jdbc_user => "master"
        jdbc_password => "mastervehicleaccidents"
        jdbc_validate_connection => true
        statement => 	"SELECT
							ny_neighborhood, ny_number_of_accidents_per_neighborhood, person_injured, person_killed,
							pedestrian_injured, pedestrian_killed, cyclist_injured, cyclist_killed, motorist_injured, motorist_killed,
							ROW_NUMBER () OVER (ORDER BY ny_number_of_accidents_per_neighborhood) as dangerous_range
							FROM (SELECT
							neighborhood as ny_neighborhood,
							count(*) as ny_number_of_accidents_per_neighborhood,
							sum(person_injured) as person_injured,
							sum(person_killed) as person_killed,
							sum(pedestrian_injured) as pedestrian_injured,
							sum(pedestrian_killed) as pedestrian_killed,
							sum(cyclist_injured) as cyclist_injured,
							sum(cyclist_killed) as cyclist_killed,
							sum(motorist_injured) as motorist_injured,
							sum(motorist_killed) as motorist_killed
						FROM accidents
						WHERE city = 'New York' and neighborhood is not null
						GROUP BY neighborhood
						ORDER BY ny_number_of_accidents_per_neighborhood) as accidents;"
    }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    manage_template => true
    index => "ny_neighborhoods"
  }
  stdout { codec => json_lines }
}
